// Code generated by ent, DO NOT EDIT.

package ent

import (
	"project/ent/brand"
	"project/ent/ingredient"
	"project/ent/inventoryitem"
	"project/ent/kitchen"
	"project/ent/kitchenresource"
	"project/ent/menu"
	"project/ent/menuitem"
	"project/ent/order"
	"project/ent/orderitem"
	"project/ent/resourceallocation"
	"project/ent/schema"
	"project/ent/staff"
	"project/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	brandFields := schema.Brand{}.Fields()
	_ = brandFields
	// brandDescName is the schema descriptor for name field.
	brandDescName := brandFields[0].Descriptor()
	// brand.NameValidator is a validator for the "name" field. It is called by the builders before save.
	brand.NameValidator = brandDescName.Validators[0].(func(string) error)
	ingredientFields := schema.Ingredient{}.Fields()
	_ = ingredientFields
	// ingredientDescName is the schema descriptor for name field.
	ingredientDescName := ingredientFields[0].Descriptor()
	// ingredient.NameValidator is a validator for the "name" field. It is called by the builders before save.
	ingredient.NameValidator = ingredientDescName.Validators[0].(func(string) error)
	// ingredientDescUnit is the schema descriptor for unit field.
	ingredientDescUnit := ingredientFields[1].Descriptor()
	// ingredient.UnitValidator is a validator for the "unit" field. It is called by the builders before save.
	ingredient.UnitValidator = ingredientDescUnit.Validators[0].(func(string) error)
	// ingredientDescCostPerUnit is the schema descriptor for cost_per_unit field.
	ingredientDescCostPerUnit := ingredientFields[2].Descriptor()
	// ingredient.CostPerUnitValidator is a validator for the "cost_per_unit" field. It is called by the builders before save.
	ingredient.CostPerUnitValidator = ingredientDescCostPerUnit.Validators[0].(func(float64) error)
	inventoryitemFields := schema.InventoryItem{}.Fields()
	_ = inventoryitemFields
	// inventoryitemDescQuantity is the schema descriptor for quantity field.
	inventoryitemDescQuantity := inventoryitemFields[0].Descriptor()
	// inventoryitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	inventoryitem.QuantityValidator = inventoryitemDescQuantity.Validators[0].(func(float64) error)
	kitchenFields := schema.Kitchen{}.Fields()
	_ = kitchenFields
	// kitchenDescName is the schema descriptor for name field.
	kitchenDescName := kitchenFields[0].Descriptor()
	// kitchen.NameValidator is a validator for the "name" field. It is called by the builders before save.
	kitchen.NameValidator = kitchenDescName.Validators[0].(func(string) error)
	// kitchenDescLocation is the schema descriptor for location field.
	kitchenDescLocation := kitchenFields[1].Descriptor()
	// kitchen.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	kitchen.LocationValidator = kitchenDescLocation.Validators[0].(func(string) error)
	// kitchenDescCapacity is the schema descriptor for capacity field.
	kitchenDescCapacity := kitchenFields[2].Descriptor()
	// kitchen.CapacityValidator is a validator for the "capacity" field. It is called by the builders before save.
	kitchen.CapacityValidator = kitchenDescCapacity.Validators[0].(func(int) error)
	kitchenresourceFields := schema.KitchenResource{}.Fields()
	_ = kitchenresourceFields
	// kitchenresourceDescName is the schema descriptor for name field.
	kitchenresourceDescName := kitchenresourceFields[0].Descriptor()
	// kitchenresource.NameValidator is a validator for the "name" field. It is called by the builders before save.
	kitchenresource.NameValidator = kitchenresourceDescName.Validators[0].(func(string) error)
	// kitchenresourceDescType is the schema descriptor for type field.
	kitchenresourceDescType := kitchenresourceFields[1].Descriptor()
	// kitchenresource.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	kitchenresource.TypeValidator = kitchenresourceDescType.Validators[0].(func(string) error)
	// kitchenresourceDescCapacity is the schema descriptor for capacity field.
	kitchenresourceDescCapacity := kitchenresourceFields[2].Descriptor()
	// kitchenresource.CapacityValidator is a validator for the "capacity" field. It is called by the builders before save.
	kitchenresource.CapacityValidator = kitchenresourceDescCapacity.Validators[0].(func(int) error)
	// kitchenresourceDescAvailable is the schema descriptor for available field.
	kitchenresourceDescAvailable := kitchenresourceFields[3].Descriptor()
	// kitchenresource.DefaultAvailable holds the default value on creation for the available field.
	kitchenresource.DefaultAvailable = kitchenresourceDescAvailable.Default.(bool)
	menuFields := schema.Menu{}.Fields()
	_ = menuFields
	// menuDescName is the schema descriptor for name field.
	menuDescName := menuFields[0].Descriptor()
	// menu.NameValidator is a validator for the "name" field. It is called by the builders before save.
	menu.NameValidator = menuDescName.Validators[0].(func(string) error)
	// menuDescActive is the schema descriptor for active field.
	menuDescActive := menuFields[1].Descriptor()
	// menu.DefaultActive holds the default value on creation for the active field.
	menu.DefaultActive = menuDescActive.Default.(bool)
	menuitemFields := schema.MenuItem{}.Fields()
	_ = menuitemFields
	// menuitemDescName is the schema descriptor for name field.
	menuitemDescName := menuitemFields[0].Descriptor()
	// menuitem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	menuitem.NameValidator = menuitemDescName.Validators[0].(func(string) error)
	// menuitemDescPrice is the schema descriptor for price field.
	menuitemDescPrice := menuitemFields[1].Descriptor()
	// menuitem.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	menuitem.PriceValidator = menuitemDescPrice.Validators[0].(func(float64) error)
	// menuitemDescPrepTime is the schema descriptor for prep_time field.
	menuitemDescPrepTime := menuitemFields[2].Descriptor()
	// menuitem.PrepTimeValidator is a validator for the "prep_time" field. It is called by the builders before save.
	menuitem.PrepTimeValidator = menuitemDescPrepTime.Validators[0].(func(int) error)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderFields[0].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescStatus is the schema descriptor for status field.
	orderDescStatus := orderFields[2].Descriptor()
	// order.DefaultStatus holds the default value on creation for the status field.
	order.DefaultStatus = orderDescStatus.Default.(string)
	// orderDescTotalPrice is the schema descriptor for total_price field.
	orderDescTotalPrice := orderFields[3].Descriptor()
	// order.DefaultTotalPrice holds the default value on creation for the total_price field.
	order.DefaultTotalPrice = orderDescTotalPrice.Default.(float64)
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescQuantity is the schema descriptor for quantity field.
	orderitemDescQuantity := orderitemFields[0].Descriptor()
	// orderitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	orderitem.QuantityValidator = orderitemDescQuantity.Validators[0].(func(int) error)
	resourceallocationFields := schema.ResourceAllocation{}.Fields()
	_ = resourceallocationFields
	// resourceallocationDescStatus is the schema descriptor for status field.
	resourceallocationDescStatus := resourceallocationFields[2].Descriptor()
	// resourceallocation.DefaultStatus holds the default value on creation for the status field.
	resourceallocation.DefaultStatus = resourceallocationDescStatus.Default.(string)
	staffFields := schema.Staff{}.Fields()
	_ = staffFields
	// staffDescName is the schema descriptor for name field.
	staffDescName := staffFields[0].Descriptor()
	// staff.NameValidator is a validator for the "name" field. It is called by the builders before save.
	staff.NameValidator = staffDescName.Validators[0].(func(string) error)
	// staffDescRole is the schema descriptor for role field.
	staffDescRole := staffFields[1].Descriptor()
	// staff.RoleValidator is a validator for the "role" field. It is called by the builders before save.
	staff.RoleValidator = staffDescRole.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[1].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescRoles is the schema descriptor for roles field.
	userDescRoles := userFields[3].Descriptor()
	// user.DefaultRoles holds the default value on creation for the roles field.
	user.DefaultRoles = userDescRoles.Default.([]string)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
